services:
  auth-api:
    build:
      context: .
      target: prod-auth-api
    ports:
      - '3002:3002'
    environment:
      AUTH_API_PORT: "3002"

  authorization-server:
    build:
      context: .
      target: prod-authorization-server
    ports:
      - '3005:3005'
    environment:
      AUTHORIZATION_SERVER_PORT: "3005"
      AUTHORIZATION_SERVER_URL: authorization-server
      LOCAL_ACCOUNT_SERVER_URL: "http://localhost:3001"
      JWT_SECRET: "secret"
      JWT_TOKEN_EXPIRES: "60s"
      MONGO_URI: mongodb://root:example@mongo
      MONGO_DB_NAME: "sell-point"
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_CODE_VERIFY_EXPIRATION: "120"
    depends_on:
      - mongo
      - redis

  #local-credentials-server:
  #  build:
  #    context: .
  #    target: local-credentials-server
  #  ports:
  #    - '3100:3100'
  #  environment:
  #    LOCAL_CREDENTIALS_PORT: "3100"
  #    JWT_EXPIRATION: "60s"
  #    JWT_SECRET: "123"
  #    MONGO_URI: mongodb://root:example@mongo
  #    MONGO_DB_NAME: "sell-point"
  #    REDIS_HOST: redis
  #    REDIS_PORT: 6379
  #    REDIS_AUTH_LOCAL_CREDENTIALS_INDEX: "1"
  #    REDIS_AUTH_EXPIRATION: "60"
  #    AUTHORIZATION_CODE: "code123"
  #    AUTH_API_PORT: "3002/login"
  #  depends_on:
  #    - mongo
  #    - redis
  mongo:
    image: mongo:7.0.9-rc1
    ports:
      - 27017:27017
    volumes:
      - './mongodata:/data/db'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  redis:
    image: redis:alpine3.19
    ports:
      - '6379:6379'
    volumes:
      - './redisdata:/data'
